@layer reset, variables, menu, animations, dummy;
@layer reset {
  *:where(:not(html, iframe, canvas, img, svg, video):not(svg *, symbol *)) {
    all: unset;
    display: revert;
  }
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }
  ul,
  ol {
    list-style-type: none;
  }
  button,
  a {
    cursor: pointer;
  }
  button:not([class]):focus,
  a:not([class]):focus {
    outline: 2px solid currentColor;
    outline-offset: 2px;
  }
  body {
    font-family: Arial, Helvetica, sans-serif;
    line-height: 1.5;
  }
}
@layer variables {
  :root {
    --color-primary: #b31919;
    --color-light: #fff;
    --color-dark: #000;
  }
}
@layer menu {
  .wrapper-nav {
    background: var(--color-primary);
  }
  .nav {
    display: grid;
    grid-template-columns: 1fr;
    align-items: center;
    gap: 4px 16px;
    padding: 8px 0;
    width: min(96%, 1200px);
    margin-inline: auto;
    min-height: 60px;
    color: var(--color-light);
  }
  .nav__logo {
    text-align: center;
  }
  .nav__logo a {
    display: inline-block;
  }
  @starting-style {
    .nav__logo a {
      animation: jello-diagonal 0.8s both;
    }
  }
  .nav__menu {
    display: grid;
    grid-auto-flow: row;
    gap: 4px 24px;
    justify-content: center;
  }
  @media (min-width: 576px) {
    .nav__menu {
      grid-auto-flow: column;
    }
  }
  @media (min-width: 992px) {
    .nav {
      grid-template-columns: 1fr auto;
    }
    .nav__logo {
      text-align: left;
    }
    .nav__menu {
      justify-content: flex-end;
    }
  }
  .menu-item {
    display: inline-block;
    transition: translate 0.3s 0.1s, opacity 0.5s 0.1s;
  }
  .menu-item:nth-child(2) {
    transition-delay: 0.3s;
  }
  .menu-item:nth-child(3) {
    transition-delay: 0.5s;
  }
  .menu-item:nth-child(4) {
    transition-delay: 0.7s;
  }
  @starting-style {
    .menu-item {
      opacity: 0;
      translate: 0 -10px;
    }
  }
  .menu-item a {
    padding: 4px 0;
    display: block;
  }
}
@layer animations {
  @keyframes jello-diagonal {
    0% {
      transform: skew(0deg 0deg);
    }
    30% {
      transform: skew(25deg 25deg);
    }
    40% {
      transform: skew(-15deg, -15deg);
    }
    50% {
      transform: skew(15deg, 15deg);
    }
    65% {
      transform: skew(-5deg, -5deg);
    }
    75% {
      transform: skew(5deg, 5deg);
    }
    100% {
      transform: skew(0deg 0deg);
    }
  }
}
@layer dummy {
  .main {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(340px, 1fr));
    align-items: center;
    gap: 16px;
    padding: 16px 0;
    width: min(96%, 1200px);
    margin-inline: auto;
  }
  .card {
    background-color: var(--color-light);
    border-radius: 5px;
    padding: 16px;
    width: 100%;
    display: grid;
    gap: 10px;
    filter: drop-shadow(1px 1px 4px rgba(0, 0, 0, 0.2));
  }
  .card__content:empty {
    --color: rgb(199, 199, 199);
    --width: 100%;
    --width-line: 250px;
    --height-rectangle: 150px;
    --height-line: 24px;
    --gutter: 10px;
    --computed-circle-rad: calc(var(--height-line) * 0.5);
    --computed-height: calc(
      var(--height-rectangle) + var(--gutter) + var(--height-line) +
        calc(1.5 * var(--gutter))
    );
    height: var(--computed-height);
    background-image: linear-gradient(0.9turn, #fff, transparent), linear-gradient(var(--color), var(--color)), radial-gradient(var(--height-line) circle at var(--computed-circle-rad) var(--computed-circle-rad), var(--color) 50%, transparent 50%), linear-gradient(var(--color), var(--color));
    background-size: var(--width) var(--computed-height), var(--width) var(--height-rectangle), var(--height-line) var(--height-line), var(--width-line) var(--height-line);
    background-position: var(--width) 0, 0 0, 0px calc(var(--height-rectangle) + var(--gutter)), calc(var(--height-line) + var(--gutter)) calc(var(--height-rectangle) + var(--gutter));
    background-repeat: no-repeat;
  }
}

/*# sourceMappingURL=style.css.map */
